# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv)
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
View(test_burough_1)
View(test_burough_2)
View(test_burough_1)
View(test_burough_2)
View(test_burough_1)
View(test_burough_2)
View(test_burough_2)
View(test_burough_1)
ldf
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
# imports
require(ggplot2)
require(stringr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
ldf
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
test_buroughs
# imports
require(ggplot2)
require(stringr)
require(dyplr)
# imports
require(ggplot2)
require(stringr)
require(dplyr)
# imports
require(ggplot2)
require(stringr)
require(dplyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
test_buroughs %>% sample_frac(0.1)
require(caret)
require(caret)
require(caret)
# imports
require(ggplot2)
require(stringr)
require(caret)
# imports
require(ggplot2)
require(stringr)
require(caret)
# imports
require(ggplot2)
require(stringr)
require(caret)
require(caret)
require(carret)
require(caret)
install.packages("caret")
require(caret)
# imports
require(ggplot2)
require(stringr)
require(caret)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
test_buroughs %>% sample_frac(0.1)
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = sample_size)
# get testing data
test_burough_1 = ldf$`2020_bronx`
test_burough_2 = ldf$`2020_brooklyn`
test_buroughs <- rbind(test_burough_1,test_burough_2)
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
ldf
# combine dataframes
do.call("rbind", ldf)
require(plyr)
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
do.call("rbind.fill", ldf)
rm(list = ls())
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- do.call("rbind.fill", ldf)
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH == 1 | df$BUROUGH == 2]
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
rm(list = ls())
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- do.call("rbind.fill", ldf)
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH == 1 | df$BUROUGH == 2, ]
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
View(df)
rm(list = ls())
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- do.call("rbind.fill", ldf)
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2, ]
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
View(df)
View(test_buroughs)
test_buroughs
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$'BOUROUGH.' == 1 | df$'BUROUGH.' == 2, ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH == 1 | df$BUROUGH. == 2, ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2, ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[(df$BOUROUGH. == 1 | df$BUROUGH. == 2), ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2]
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1 | df$BUROUGH. == 2,]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1,]
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1,]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1, ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == '1',]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH == '1',]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_buroughs = df[df$BOUROUGH. == 1, ]
test_buroughs
test_size <- floor(0.1 * nrow(test_buroughs))
test_ind <- sample(seq_len(nrow(test_buroughs)), size = test_size)
test_set <- test_buroughs[test_ind, ]
train_set <- test_buroughs[-test_ind, ]
test_set
View(df)
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BoROUGH. == 1, ]
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BoROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
df
# combine dataframes
df <- do.call("rbind", fill = TRUE, ldf)
# combine dataframes
df <- do.call("rbind(fill = TRUE)", ldf)
ldf
# combine dataframes
df <- do.call("rbind", ldf)
# combine dataframes
df <- do.call("rbind.fill", ldf)
df
# combine dataframes
df <- rbindlist(ldf, fill = TRUE)
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
require(data.table)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf, fill = TRUE)
df
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE, fill = TRUE)
df
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM")
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE, fill = TRUE)
df
View(ldf)
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
require(data.table)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, check.names = FALSE)
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE, fill = TRUE)
df
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM", check.names = FALSE)
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE, fill = TRUE)
df
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
require(data.table)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM", check.names = FALSE)
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE, fill = TRUE)
df
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
# combine dataframes
df <- rbindlist(ldf, use.names = TRUE)
# combine dataframes
df <- rbindlist(ldf)
# combine dataframes
df <- rbindlist(ldf)
df
# combine dataframes
df <- rbindlist(ldf, fill = TRUE)
# combine dataframes
df <- rbindlist(ldf, fill = TRUE)
df
# combine dataframes
df <- rbindlist(ldf)
df
# combine dataframes
df <- rbindlist(ldf)
df
View(df)
# imports
require(ggplot2)
require(stringr)
require(caret)
require(plyr)
require(data.table)
require(dplyr)
# alter plot size
knitr::opts_chunk$set(fig.width=20, fig.height=8)
# import data
filenames <- list.files("Assignment1-dataset", pattern="*.csv", full.names = TRUE)
ldf <- lapply(filenames, read.csv, fileEncoding="UTF-8-BOM", check.names = FALSE)
names(ldf) <- str_replace(basename(filenames), ".csv", "")
# combine dataframes
df <- rbindlist(ldf)
df
# rename 18/19 columns
names(df)[names(df) == "TAX CLASS AS OF FINAL ROLL 18/19"] <- "MOST RECENT TAX CLASS"
names(df)[names(df) == "BUILDING CLASS AS OF FINAL ROLL 18/19"] <- "MOST RECENT BUILDING CLASS"
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH. == 1, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH == 1 | df$BOROUGH == 2, ]
# rename 18/19 columns
names(df)[names(df) == "TAX CLASS AS OF FINAL ROLL 18/19"] <- "MOST RECENT TAX CLASS"
names(df)[names(df) == "BUILDING CLASS AS OF FINAL ROLL 18/19"] <- "MOST RECENT BUILDING CLASS"
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH == 1 | df$BOROUGH == 2, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- test_boroughs[-test_ind, ]
test_set
train_set
# get training and testing data
# choose buroughs 1 and 2 for testing
test_boroughs = df[df$BOROUGH == 1 | df$BOROUGH == 2, ]
test_boroughs
test_size <- floor(0.1 * nrow(test_boroughs))
test_ind <- sample(seq_len(nrow(test_boroughs)), size = test_size)
test_set <- test_boroughs[test_ind, ]
train_set <- df[-test_ind, ]
test_set
train_set
